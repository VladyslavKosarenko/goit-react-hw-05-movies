{"version":3,"file":"static/js/561.e9117415.chunk.js","mappings":"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","sources":["components/fetchFunction.js","pages/MoviesSearchPagesNew.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '815be87df7ca36934ad03a6159bc2a6d';\n\nexport const fetchMovie = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nexport const fetchSearchMovie = async query => {\n  const apiKey = '815be87df7ca36934ad03a6159bc2a6d';\n  try {\n    const fetchMovie = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n    );\n    return fetchMovie.data.results || [];\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n  }\n};\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const reviewsResponse = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n    const response = reviewsResponse.data.results;\n\n    return response;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchSearchMovie } from 'components/fetchFunction';\nimport { Link } from 'react-router-dom';\nconst MovieSearchPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchMovie, setSearchMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const fetchMovie = await fetchSearchMovie(query);\n        setSearchMovie(fetchMovie);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchMovie();\n  }, [query]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        placeholder=\"Enter a movie title\"\n      />\n      <div>\n        {searchMovie.length === 0 ? (\n          <p>No movies found</p>\n        ) : (\n          <ul>\n            {searchMovie.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieSearchPage;\n"],"names":["apiKey","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","error","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_fetchMovie","_context2","results","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","reviewsResponse","_context5","_x4","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","searchMovie","setSearchMovie","useEffect","_jsxs","children","_jsx","type","value","onChange","e","target","placeholder","length","map","movie","Link","to","id","title"],"sourceRoot":""}