{"version":3,"file":"static/js/257.141d18a3.chunk.js","mappings":"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","sources":["components/fetchFunction.js","pages/MovieDetailsNew.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '815be87df7ca36934ad03a6159bc2a6d';\n\nexport const fetchMovie = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nexport const fetchSearchMovie = async query => {\n  const apiKey = '815be87df7ca36934ad03a6159bc2a6d';\n  try {\n    const fetchMovie = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\n    );\n    return fetchMovie.data.results || [];\n  } catch (error) {\n    console.error('Error fetching data:', error);\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n  }\n};\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const reviewsResponse = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}`\n    );\n    const response = reviewsResponse.data.results;\n\n    return response;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n  }\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Outlet, useParams, NavLink } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../components/fetchFunction';\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLInkHref = useRef(location);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const details = await fetchMovieDetails(movieId);\n        setMovieDetails(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <div>\n        <Link to={backLInkHref.current.state?.from ?? '/'}>\n          <b>Back to home</b>\n        </Link>\n      </div>\n\n      {movieDetails.backdrop_path && (\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movieDetails.backdrop_path}`}\n          alt={movieDetails.title}\n        />\n      )}\n\n      <p>{movieDetails.overview}</p>\n      <p>{movieDetails.genres.name}</p>\n\n      <ul>\n        <h3>Additional information</h3>\n        <li>\n          <NavLink to=\"cast\">Credits</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["apiKey","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","error","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_fetchMovie","_context2","results","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","reviewsResponse","_context5","_x4","_backLInkHref$current","_backLInkHref$current2","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","location","useLocation","backLInkHref","useRef","useEffect","fetchData","details","_jsxs","children","_jsx","Link","to","current","state","from","backdrop_path","src","alt","title","overview","genres","name","NavLink","Outlet"],"sourceRoot":""}